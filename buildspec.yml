version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 14
      java: corretto17
    commands:
      - echo "Installing NPM dependencies..."
      - npm install
      - echo "Instalando OWASP Dependency-Check..."
      - curl -sLO https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.9/dependency-check-9.0.9-release.zip
      - yum install -y unzip || apt-get install -y unzip
      - unzip dependency-check-9.0.9-release.zip
      - echo "Verificando diretórios extraídos..."
      - ls -R
      - echo "Dando permissão ao script..."
      - chmod +x $(find . -type d -name "dependency-check*" | head -n 1)/bin/dependency-check.sh
      - echo "Verificando permissões do script..."
      - ls -l $(find . -type d -name "dependency-check*" | head -n 1)/bin/dependency-check.sh
      - echo "Verificando instalação do Java..."
      - java -version

  pre_build:
    commands:
      - echo "Verificando variáveis de ambiente..."
      - echo "Listando todas as variáveis de ambiente para depuração:"
      - env | sort  
      - echo "Verificando se a variável NVD_API_KEY está definida..."
      - |
        if env | grep -q "NVD_API_KEY"; then
          echo "Variável NVD_API_KEY encontrada."
        else
          echo "AVISO: Variável NVD_API_KEY não está definida."
          echo "Continuando sem a variável NVD_API_KEY..."
        fi
      - |
        if [ -z "$NVD_API_KEY" ]; then
          echo "ERRO: A variável NVD_API_KEY está vazia ou não definida!"
          exit 1
        else
          echo "Variável NVD_API_KEY está definida e pronta para uso."
        fi

  build:
    commands:
      - echo "Testando conexão manual com API da NVD..."
      - |
        if [ -n "$NVD_API_KEY" ]; then
          curl -H "apiKey:$NVD_API_KEY" https://services.nvd.nist.gov/rest/json/cve/1.0
        else
          echo "AVISO: NVD_API_KEY não está definida. Pulando teste de conexão com a API da NVD."
        fi
      - echo "Rodando análise de dependências..."
      - mkdir -p reports/
      - $(find . -type d -name "dependency-check*" | head -n 1)/bin/dependency-check.sh --project "meu-projeto" --scan . --format HTML --out reports/ --nvdApiKey "$NVD_API_KEY" --nvdApiDelay 10000

  post_build:
    commands:
      - echo "Análise concluída! Salvando resultados..."
      - aws s3 cp reports/ s3://meu-bucket-de-relatorios/ --recursive